{"ast":null,"code":"import { uniqBy } from 'lodash';\nexport const addToCart = item => {\n  let items = JSON.parse(localStorage.getItem('cart')) || [];\n  items = uniqBy([{ ...item,\n    count: 1\n  }, ...items], '_id');\n  localStorage.setItem('cart', JSON.stringify(items));\n  return {\n    type: 'ADDITEM',\n    payload: items\n  };\n};\nexport const incProductCount = item => {\n  let items = JSON.parse(localStorage.getItem('cart'));\n  items = items.map(product => product._id === item._id ? { ...item,\n    count: product.count + 1\n  } : product);\n  localStorage.setItem('cart', JSON.stringify(items));\n  return {\n    type: 'INCPRODUCTCOUNT',\n    payload: items\n  };\n};\nexport const decProductCount = item => {\n  if (item.count > 1) {\n    let items = JSON.parse(localStorage.getItem('cart'));\n    items = items.map(product => product._id === item._id ? { ...item,\n      count: product.count - 1\n    } : product);\n    localStorage.setItem('cart', JSON.stringify(items));\n    return {\n      type: 'DECPRODUCTCOUNT',\n      payload: items\n    };\n  }\n\n  return {\n    type: null\n  };\n};\nexport const removeProduct = id => {\n  let items = JSON.parse(localStorage.getItem('cart'));\n  items = items.filter(product => product._id !== id);\n  localStorage.setItem('cart', JSON.stringify(items));\n  return {\n    type: 'REMOVE_PRODUCT',\n    payload: items\n  };\n};","map":{"version":3,"sources":["C:/Users/ACER/Desktop/react project Ecommerce website/src/actions/cartActions.js"],"names":["uniqBy","addToCart","item","items","JSON","parse","localStorage","getItem","count","setItem","stringify","type","payload","incProductCount","map","product","_id","decProductCount","removeProduct","id","filter"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AAGE,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAEjC,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAAxD;AAEEJ,EAAAA,KAAK,GAAGH,MAAM,CAAC,CAAC,EAAC,GAAGE,IAAJ;AAAUM,IAAAA,KAAK,EAAE;AAAjB,GAAD,EAAsB,GAAGL,KAAzB,CAAD,EAAkC,KAAlC,CAAd;AAEAG,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA7B;AAEA,SAAO;AAELQ,IAAAA,IAAI,EAAE,SAFD;AAGLC,IAAAA,OAAO,EAAET;AAHJ,GAAP;AAMH,CAdM;AAgBP,OAAO,MAAMU,eAAe,GAAIX,IAAD,IAAU;AAEnC,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AAEAJ,EAAAA,KAAK,GAAGA,KAAK,CAACW,GAAN,CAAUC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBd,IAAI,CAACc,GAArB,GAA2B,EAAC,GAAGd,IAAJ;AAAUM,IAAAA,KAAK,EAAEO,OAAO,CAACP,KAAR,GAAgB;AAAjC,GAA3B,GAAiEO,OAAtF,CAAR;AAEAT,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA7B;AAEA,SAAO;AACHQ,IAAAA,IAAI,EAAE,iBADH;AAEHC,IAAAA,OAAO,EAAET;AAFN,GAAP;AAKL,CAbM;AAgBP,OAAO,MAAMc,eAAe,GAAIf,IAAD,IAAU;AAEtC,MAAGA,IAAI,CAACM,KAAL,GAAa,CAAhB,EAAmB;AAEf,QAAIL,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AAEAJ,IAAAA,KAAK,GAAGA,KAAK,CAACW,GAAN,CAAUC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBd,IAAI,CAACc,GAArB,GAA2B,EAAC,GAAGd,IAAJ;AAAUM,MAAAA,KAAK,EAAEO,OAAO,CAACP,KAAR,GAAgB;AAAjC,KAA3B,GAAiEO,OAAtF,CAAR;AAEAT,IAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA7B;AAEA,WAAO;AACHQ,MAAAA,IAAI,EAAE,iBADH;AAEHC,MAAAA,OAAO,EAAET;AAFN,KAAP;AAIH;;AAED,SAAO;AAACQ,IAAAA,IAAI,EAAE;AAAP,GAAP;AAEJ,CAlBQ;AAqBT,OAAO,MAAMO,aAAa,GAAIC,EAAD,IAAQ;AAEjC,MAAIhB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAZ;AAEAJ,EAAAA,KAAK,GAAGA,KAAK,CAACiB,MAAN,CAAaL,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBG,EAAxC,CAAR;AAEAb,EAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6BL,IAAI,CAACM,SAAL,CAAeP,KAAf,CAA7B;AAEA,SAAO;AACHQ,IAAAA,IAAI,EAAE,gBADH;AAEHC,IAAAA,OAAO,EAAET;AAFN,GAAP;AAKH,CAbM","sourcesContent":["import { uniqBy } from 'lodash'\r\n  \r\n\r\n  export const addToCart = (item) => {\r\n    \r\n    let items = JSON.parse(localStorage.getItem('cart')) || [];\r\n\r\n      items = uniqBy([{...item, count: 1}, ...items], '_id');\r\n\r\n      localStorage.setItem('cart', JSON.stringify(items));\r\n\r\n      return {\r\n\r\n        type: 'ADDITEM',\r\n        payload: items\r\n          \r\n      }\r\n  }\r\n\r\n  export const incProductCount = (item) => {\r\n\r\n        let items = JSON.parse(localStorage.getItem('cart'));\r\n\r\n        items = items.map(product => product._id === item._id ? {...item, count: product.count + 1} : product)\r\n\r\n        localStorage.setItem('cart', JSON.stringify(items));\r\n\r\n        return {\r\n            type: 'INCPRODUCTCOUNT',\r\n            payload: items\r\n        }\r\n\r\n  }\r\n\r\n\r\n  export const decProductCount = (item) => {\r\n\r\n     if(item.count > 1) {\r\n\r\n         let items = JSON.parse(localStorage.getItem('cart'));\r\n    \r\n         items = items.map(product => product._id === item._id ? {...item, count: product.count - 1} : product)\r\n    \r\n         localStorage.setItem('cart', JSON.stringify(items));\r\n    \r\n         return {\r\n             type: 'DECPRODUCTCOUNT',\r\n             payload: items\r\n         }\r\n     }\r\n\r\n     return {type: null}\r\n      \r\n}\r\n\r\n\r\nexport const removeProduct = (id) => {\r\n\r\n    let items = JSON.parse(localStorage.getItem('cart'));\r\n    \r\n    items = items.filter(product => product._id !== id)\r\n\r\n    localStorage.setItem('cart', JSON.stringify(items));\r\n\r\n    return {\r\n        type: 'REMOVE_PRODUCT',\r\n        payload: items\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
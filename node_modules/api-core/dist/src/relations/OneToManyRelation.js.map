{"version":3,"file":"OneToManyRelation.js","sourceRoot":"","sources":["../../../src/relations/OneToManyRelation.ts"],"names":[],"mappings":";;;AACA,uDAAwE;AACxE,gCAA2B;AAE3B,MAAa,iBAAkB,SAAQ,iCAAe;IAQlD,YAAY,IAAuB,EACvB,EAAqB,EACrB,UACM,EAAG;QACjB,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,UAAU,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,IAAI,EAAE,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,GAAG,SAAG,CAAC,gBAAgB,CAAC;QACzE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAK,CAAA;IAC3C,CAAC;IAED,OAAO,KAAK,OAAO,aAAa,CAAA,CAAC,CAAC;CACrC;AApBD,8CAoBC;AAED,sCAAoB,CAAC,aAAa,CAAC,GAAG,iBAAiB,CAAC","sourcesContent":["import {ApiEdgeDefinition} from \"../edge/ApiEdgeDefinition\";\nimport {ApiEdgeRelation, ApiEdgeRelationTypes} from \"./ApiEdgeRelation\";\nimport {Api} from \"../Api\";\n\nexport class OneToManyRelation extends ApiEdgeRelation {\n    name: string;\n    relationId: string;\n    relatedId: string;\n    from: ApiEdgeDefinition;\n    to: ApiEdgeDefinition;\n    hasPair: boolean;\n\n    constructor(from: ApiEdgeDefinition,\n                to: ApiEdgeDefinition,\n                options: { relationId?: string, relatedId?: string, name?: string, hasPair?: boolean }\n                    = { }) {\n        super(from, to);\n        this.name = options.name || to.pluralName;\n        this.relatedId = options.relatedId || to.idField;\n        this.relationId = options.relationId || from.name + Api.defaultIdPostfix;\n        this.hasPair = options.hasPair || false\n    }\n\n    getType() { return 'one-to-many' }\n}\n\nApiEdgeRelationTypes['one-to-many'] = OneToManyRelation;"]}
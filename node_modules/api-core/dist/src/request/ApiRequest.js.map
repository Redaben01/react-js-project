{"version":3,"file":"ApiRequest.js","sourceRoot":"","sources":["../../../src/request/ApiRequest.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeDefinition} from \"../edge/ApiEdgeDefinition\";\nimport {OneToManyRelation} from \"../relations/OneToManyRelation\";\nimport {OneToOneRelation} from \"../relations/OneToOneRelation\";\nimport {ApiEdgeQueryContext} from \"../edge/ApiEdgeQueryContext\";\nimport {ApiEdgeMethod} from \"../edge/ApiEdgeMethod\";\nimport {Api} from \"../Api\";\n\nexport class PathSegment {\n    edge: ApiEdgeDefinition;\n    relation: OneToManyRelation|null;\n\n    inspect = () => {\n        return '';\n    }\n}\n\nexport class MethodPathSegment extends PathSegment {\n    edge: ApiEdgeDefinition;\n    method: ApiEdgeMethod;\n\n    constructor(edge: ApiEdgeDefinition, method: ApiEdgeMethod) {\n        super();\n        this.edge = edge;\n        this.method = method;\n    }\n\n    inspect = () => {\n        return `call{${this.method.name}}`;\n    }\n}\n\nexport class EdgePathSegment extends PathSegment {\n    edge: ApiEdgeDefinition;\n    relation: OneToManyRelation|null;\n\n    constructor(edge: ApiEdgeDefinition, relation: OneToManyRelation|null) {\n        super();\n        this.edge = edge;\n        this.relation = relation;\n    }\n\n    inspect = () => {\n        return `[${this.edge.name}]`;\n    }\n}\n\nexport class EntryPathSegment extends PathSegment {\n    edge: ApiEdgeDefinition;\n    relation: OneToManyRelation|null;\n    id: string;\n\n    constructor(edge: ApiEdgeDefinition, id: string, relation: OneToManyRelation|null) {\n        super();\n        this.edge = edge;\n        this.relation = relation;\n        this.id = id;\n    }\n\n    inspect = () => {\n        return `${this.edge.name}(${this.id})`;\n    }\n}\n\nexport class RelatedFieldPathSegment extends PathSegment {\n    edge: ApiEdgeDefinition;\n    relation: OneToOneRelation;\n\n    constructor(edge: ApiEdgeDefinition, relation: OneToOneRelation) {\n        super();\n        this.edge = edge;\n        this.relation = relation;\n    }\n\n    inspect = () => {\n        return `${this.edge.name}.${this.relation.name}`;\n    }\n}\n\nexport class ApiRequestPath {\n    segments: PathSegment[] = [];\n\n    add = (segment: PathSegment) => {\n        this.segments.push(segment);\n    };\n\n    inspect = () => {\n        return this.segments.map(segment => segment.inspect()).join(' -> ');\n    }\n}\n\nexport enum ApiRequestType {\n    Create = 1 << 0,\n    Read   = 1 << 1,\n    Update = 1 << 2,\n    Patch  = 1 << 3,\n    Delete = 1 << 4,\n    Exists = 1 << 5,\n\n    Any = Create | Read | Update | Patch | Delete | Exists,\n    Change = Create | Update | Patch\n}\n\nexport class ApiRequest {\n    api: Api;\n    type: ApiRequestType;\n    path: ApiRequestPath;\n    body: any|null = null; //Should be request context\n    stream: NodeJS.ReadableStream|null = null;\n    context: ApiEdgeQueryContext; //Should be request context\n    metadata: any = {};\n\n    constructor(api: Api) {\n        this.api = api;\n        this.path = new ApiRequestPath();\n        this.type = ApiRequestType.Read;\n        this.context = new ApiEdgeQueryContext();\n    }\n}"]}
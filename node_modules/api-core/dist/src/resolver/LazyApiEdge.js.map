{"version":3,"file":"LazyApiEdge.js","sourceRoot":"","sources":["../../../src/resolver/LazyApiEdge.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiEdgeDefinition} from \"../edge/ApiEdgeDefinition\";\nimport {ApiEdgeAction} from \"../edge/ApiEdgeAction\";\nimport {Api} from \"../Api\";\nimport {ApiEdgeMethod} from \"../edge/ApiEdgeMethod\";\nimport {ApiEdgeRelation} from \"../relations/ApiEdgeRelation\";\nimport {ApiEdgeSchema} from \"../edge/ApiEdgeSchema\";\nimport {ApiEdgeQueryContext} from \"../edge/ApiEdgeQueryContext\";\n\nexport class LazyApiEdge implements ApiEdgeDefinition {\n    private realEdge: ApiEdgeDefinition;\n    private readonly resolver: () => Promise<ApiEdgeDefinition|undefined>;\n\n    constructor(api: Api, name: string, plural: boolean, resolver: () => Promise<ApiEdgeDefinition|undefined>) {\n        this.api = api;\n        this.resolver = resolver;\n\n        if(plural) {\n            this.pluralName = name\n        }\n        else {\n            this.name = name\n        }\n    }\n\n    async resolve() {\n        if(!this.realEdge) {\n            const realEdge = await this.resolver();\n            if (realEdge) {\n                this.realEdge = realEdge;\n                this.name = realEdge.name;\n                this.pluralName = realEdge.pluralName;\n                this.relations = realEdge.relations;\n                this.methods = realEdge.methods;\n                this.actions = realEdge.actions;\n                return true\n            }\n\n            return false\n        }\n\n        return true\n    }\n\n    actions: ApiEdgeAction[] = [];\n    methods: ApiEdgeMethod[] = [];\n    relations: ApiEdgeRelation[] = [];\n\n    get allowCreate() { return this.realEdge.allowCreate }\n    set allowCreate(value: boolean) { this.realEdge.allowCreate = value }\n    get allowExists() { return this.realEdge.allowExists }\n    set allowExists(value: boolean) { this.realEdge.allowExists = value }\n    get allowGet() { return this.realEdge.allowGet }\n    set allowGet(value: boolean) { this.realEdge.allowGet = value }\n    get allowList() { return this.realEdge.allowList }\n    set allowList(value: boolean) { this.realEdge.allowList = value }\n    get allowPatch() { return this.realEdge.allowPatch }\n    set allowPatch(value: boolean) { this.realEdge.allowPatch = value }\n    get allowRemove() { return this.realEdge.allowRemove }\n    set allowRemove(value: boolean) { this.realEdge.allowRemove = value }\n    get allowUpdate() { return this.realEdge.allowUpdate }\n    set allowUpdate(value: boolean) { this.realEdge.allowUpdate = value }\n\n    get idField() { return this.realEdge.idField }\n    set idField(value: string) { this.realEdge.idField = value }\n\n    get schema() { return this.realEdge.schema }\n    set schema(value: ApiEdgeSchema) { this.realEdge.schema = value }\n\n    api: Api;\n    external = true;\n    name: string;\n    pluralName: string;\n\n    createEntry = async (context: ApiEdgeQueryContext, entryFields: any) => {\n        return this.realEdge.createEntry(context, entryFields)\n    };\n\n    exists = async (context: ApiEdgeQueryContext) => {\n        return this.realEdge.exists(context)\n    };\n\n    getEntry = async (context: ApiEdgeQueryContext) => {\n        return this.realEdge.getEntry(context)\n    };\n\n    listEntries = async (context: ApiEdgeQueryContext) => {\n        return this.realEdge.listEntries(context)\n    };\n\n    patchEntry = async (context: ApiEdgeQueryContext, entryFields: any) => {\n        return this.realEdge.patchEntry(context, entryFields)\n    };\n\n    relation = async (name: string) => {\n        return this.realEdge.relation(name)\n    };\n\n    removeEntry = async (context: ApiEdgeQueryContext, entryFields: any) => {\n        return this.realEdge.removeEntry(context, entryFields)\n    };\n\n    updateEntry = async (context: ApiEdgeQueryContext, entryFields: any) => {\n        return this.realEdge.updateEntry(context, entryFields)\n    };\n\n    prepare = () => Promise.resolve();\n\n    metadata = () => this.realEdge.metadata();\n\n    get(key: string): any {\n        this.realEdge.get(key)\n    }\n\n    set(key: string, value: any): any {\n        this.realEdge.set(key, value)\n    }\n}"]}